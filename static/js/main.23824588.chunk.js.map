{"version":3,"sources":["Store/action-types/auth.js","Store/utility.js","Store/reducers/auth.js","Store/reducers/index.js","Store/actions/signin.js","Containers/Home/index.js","Containers/Signup/index.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["AUTH_START","AUTH_SUCCESS","updateObject","oldObject","updatedProperties","initialState","token","userType","loading","reducer","state","action","type","actionTypes","combineReducers","auth","Auth","authSuccess","email","password","dispatch","authData","axios","post","then","response","console","log","expirationDate","Date","getTime","data","expiresIn","localStorage","setItem","idToken","userId","catch","err","Copyright","Typography","variant","color","align","Link","href","getFullYear","Home","submitHandler","event","preventDefault","props","signin","this","classes","Grid","container","component","className","root","Backdrop","backdrop","open","CircularProgress","CssBaseline","item","xs","sm","md","image","Paper","elevation","square","paper","Avatar","avatar","form","noValidate","onSubmit","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","error","helperText","FormControlLabel","control","Checkbox","value","Button","submit","Box","mt","Component","withStyles","theme","height","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","spacing","display","flexDirection","alignItems","secondary","main","width","marginTop","zIndex","drawer","withTheme","connect","isAuthenticated","actions","useStyles","makeStyles","SignUp","Container","maxWidth","justify","App","routes","path","exact","Signup","to","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23824588.chunk.js","sourcesContent":["export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from '../action-types/auth'\nimport {updateObject} from '../utility'\n\nconst initialState = {\n    token: null\n    ,userType: null\n    ,loading: false\n};\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.AUTH_START: return updateObject(state, {loading: true});\n        case actionTypes.AUTH_SUCCESS: return updateObject(state, {loading: false});\n        default: return state;\n    }\n};\n\nexport default reducer;","import {combineReducers} from 'redux';\nimport Auth from './auth';\n\nexport default combineReducers({\n    auth: Auth\n});","// import axios from 'axios';\nimport axios from 'axios';\nimport * as actionTypes from '../action-types/auth'\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = () => {\n    return {\n        type: actionTypes.AUTH_SUCCESS\n    };\n}\n\nexport const auth = (email, password) => {\n    return (\n        dispatch => {\n            dispatch(authStart());\n            const authData = {\n                email: email,\n                password: password,\n            };\n            const url = 'http://test.com'\n            axios.post(url, authData)\n            .then(response => {\n                console.log(response);\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n                localStorage.setItem('token', response.data.idToken);\n                localStorage.setItem('expirationDate', expirationDate);\n                localStorage.setItem('userId', response.data.userId);\n                dispatch(authSuccess());\n            })\n            .catch(err => {\n                dispatch(authSuccess()); // handle errors\n            });\n        }\n    )\n};","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles'\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as actions from '../../Store/actions/signin';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst styles = theme => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n});\n\nclass Home extends Component {\n    submitHandler = ( event ) => {\n        event.preventDefault();\n        this.props.signin( 'take_user_name', 'take_pwd' );\n    }\n    render () {\n        const { classes, loading} = this.props;\n        return (\n            <Grid container component=\"main\" className={classes.root}>\n                <Backdrop className={classes.backdrop} open={loading} >\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={this.submitHandler}>\n                    <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                    error={false}\n                    helperText=\"Incorrect entry.\"\n                    />\n                    <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    />\n                    <FormControlLabel\n                    control={<Checkbox value=\"remember\" color=\"primary\" />}\n                    label=\"Remember me\"\n                    />\n                    <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    >\n                    Sign In\n                    </Button>\n                    <Grid container>\n                    <Grid item xs>\n                        <Link href=\"#\" variant=\"body2\">\n                        Forgot password?\n                        </Link>\n                    </Grid>\n                    <Grid item>\n                        <Link href=\"signup\" variant=\"body2\">\n                        {\"Don't have an account? Sign Up\"}\n                        </Link>\n                    </Grid>\n                    </Grid>\n                    <Box mt={5}>\n                    <Copyright />\n                    </Box>\n                </form>\n                </div>\n            </Grid>\n            </Grid>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      isAuthenticated: state.auth.token !== null\n      ,userType: state.auth.type\n      ,loading: state.auth.loading\n    };\n  };\n  \nconst mapDispatchToProps = dispatch => {\nreturn {\n    // onTryAutoSignup: () => dispatch( actions.authCheckState() )\n    signin: (email, password) => dispatch(actions.auth(email, password))\n};\n};\nexport default withStyles(styles, { withTheme: true })(connect( mapStateToProps, mapDispatchToProps )( Home ));\n// export default ;","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Home from './Home';\nimport Signup from './Signup';\nclass App extends Component {\n  componentDidMount () {\n    // this.props.onTryAutoSignup();\n  }\n\n  render () {\n    let routes = (\n      <Switch>\n        <Route path=\"/signin\" component={Home} />\n        <Route path=\"/signup\" exact component={Signup} />\n        <Route path=\"/\" exact component={Home} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if ( this.props.isAuthenticated && this.props.userType === 'provider') {\n      routes = (\n        <Switch>\n          <Route path=\"/orders\" component={Home} />\n          <Redirect to=\"/orders\" />\n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n        {routes}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n    ,userType: state.auth.type\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // onTryAutoSignup: () => dispatch( actions.authCheckState() )\n  };\n};\n\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )( App ) );","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './Store/reducers';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render( app, document.getElementById( 'root' ) );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}